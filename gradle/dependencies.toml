[versions]
kspVersion = "1.7.21-1.0.8"
kotlinVersion = "1.7.21"
dokkaVersion = "1.7.20"
pluginPublishVersion = "1.1.0"
ktorVersion = "2.1.3"
korioVersion = "2.2.0"
kotlinPoetVersion = "1.12.0"
logbackVersion = "1.4.5"
ktlintVersion = "11.0.0"
koverVersion = "0.6.1"

[plugins]
multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlinVersion" }
serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlinVersion" }
kspPlugin = { id = "com.google.devtools.ksp", version.ref = "kspVersion" }
pluginPublish = { id = "com.gradle.plugin-publish", version.ref = "pluginPublishVersion" }
ktlint = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "ktlintVersion" }
kover = { id = "org.jetbrains.kotlinx.kover", version.ref = "koverVersion" }
dokka = { id = "org.jetbrains.dokka", version.ref = "dokkaVersion" }

[libraries]
ksp = { module = "com.google.devtools.ksp:symbol-processing-api", version.ref = "kspVersion" }
kotlinPoet = { module = "com.squareup:kotlinpoet", version.ref = "kotlinPoetVersion" }
kotlinPoetKsp = { module = "com.squareup:kotlinpoet-ksp", version.ref = "kotlinPoetVersion" }

ktorClientCore = { module = "io.ktor:ktor-client-core", version.ref = "ktorVersion" }
ktorClientCio = { module = "io.ktor:ktor-client-cio", version.ref = "ktorVersion" }
ktorServerCore = { module = "io.ktor:ktor-server-core", version.ref = "ktorVersion" }
ktorServerNetty = { module = "io.ktor:ktor-server-netty", version.ref = "ktorVersion" }
ktorServerWebsocket = { module = "io.ktor:ktor-server-websockets", version.ref = "ktorVersion" }
ktorClientWebsocket = { module = "io.ktor:ktor-client-websockets", version.ref = "ktorVersion" }
ktorServerContentNegotiation = { module = "io.ktor:ktor-server-content-negotiation-jvm", version.ref = "ktorVersion" }
ktorSerializationJvm = { module = "io.ktor:ktor-serialization-kotlinx-json-jvm", version.ref = "ktorVersion" }

logback = { module = "ch.qos.logback:logback-classic", version.ref = "logbackVersion" }

korio = { module = "com.soywiz.korlibs.korio:korio", version.ref = "korioVersion" }